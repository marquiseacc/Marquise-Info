@{
    ViewBag.Title = "BranchSelection";
    Layout = "~/areas/CRM/Views/Shared/_Layout.cshtml";
    ViewData["IsLoginPage"] = true;
}

<section class="login-page pt50 pb50 dir-center">
    <div class="v-center m-auto">
        <div class="login-form-div">
            <div class="form-block">
                <div class="table-responsive">
                    <table class="table table-light">
                        <thead>
                            <tr class="custom-tr">
                                <th class="font-16">لطفا شعبه مورد نظر خود را انتخاب کنید.</th>
                            </tr>
                        </thead>
                        <tbody id="accountTableBody">
                            <!-- با JavaScript پر می‌شود -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const token = localStorage.getItem("jwtToken");

            if (!token) {
                Swal.fire("خطا", "لطفاً دوباره وارد شوید.", "error")
                    .then(() => window.location.href = "/CRM/Auth/SendOtp");
                return;
            }

            fetch('/CRM/Auth/GetBranches', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            })
                .then(res => res.json())
                .then(response => {
                    if (response.success) {
                        const accounts = response.data;
                        const tbody = document.getElementById("accountTableBody");
                        tbody.innerHTML = "";

                        accounts.forEach(account => {
                            const row = document.createElement("tr");
                            row.classList.add("table-row-link");
                            row.dataset.userId = account.UserId;
                            row.dataset.crmAccountId = account.CrmAccountId;
                            row.dataset.accountId = account.AccountId;
                            row.dataset.nameId = account.Name;

                            row.innerHTML = `<td>${account.Name}</td>`;

                            // اضافه کردن رویداد کلیک به هر ردیف
                            row.addEventListener('click', function () {
                                // حذف رنگ انتخاب از بقیه ردیف‌ها
                                document.querySelectorAll(".table-light tbody tr").forEach(r => {
                                    r.classList.remove('selected-row');
                                });

                                // رنگ دادن به ردیف انتخاب‌شده
                                this.classList.add('selected-row');

                                const accountVM = {
                                    UserId: this.dataset.userId,
                                    AccountId: this.dataset.accountId,
                                    CrmAccountId: this.dataset.crmAccountId,
                                    Name: this.dataset.nameId
                                };

                                fetch('/CRM/Auth/SetClaims', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'Authorization': `Bearer ${token}`
                                    },
                                    body: JSON.stringify(accountVM)
                                })
                                    .then(res => res.json())
                                    .then(data => {
                                        console.log("Response from SetClaims:", data);
                                        if (data.token) {
                                            localStorage.setItem('jwtToken', data.token);
                                            localStorage.setItem("userName", accountVM.Name);
                                            window.location.href = '/CRM/Dashboard/Index';
                                        } else {
                                            Swal.fire('خطا', 'توکن دریافت نشد.', 'error');
                                        }
                                    })
                                    .catch(err => {
                                        console.error(err);
                                        Swal.fire('خطا', 'خطا در ارتباط با سرور', 'error');
                                    });
                            });

                            tbody.appendChild(row);
                        });
                    } else {
                        Swal.fire("خطا", response.message || "خطا در دریافت حساب‌ها", "error");
                    }
                })
                .catch(error => {
                    console.error("خطا در دریافت اطلاعات حساب:", error);
                    Swal.fire("خطا", "مشکلی در ارتباط با سرور.", "error");
                });
        });

    </script>
}
